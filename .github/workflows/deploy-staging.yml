name: Deploy to Staging

on:
  push:
    branches: [develop]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET: nextjs-cicd-mcp-practice-staging-bucket
  CLOUDFRONT_DISTRIBUTION_ID: YOUR_STAGING_CLOUDFRONT_DISTRIBUTION_ID

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: staging

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3 Staging
        run: |
          aws s3 sync .next/static s3://${{ env.S3_BUCKET }}/_next/static --cache-control "public, max-age=31536000, immutable"
          aws s3 sync public/ s3://${{ env.S3_BUCKET }}/ --cache-control "public, max-age=86400"
          aws s3 cp .next/standalone/ s3://${{ env.S3_BUCKET }}/ --recursive --cache-control "public, max-age=0, no-cache, no-store, must-revalidate"

      - name: Invalidate CloudFront Staging
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: "#deployments"
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
